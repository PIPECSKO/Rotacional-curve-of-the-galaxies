import numpy as np
import matplotlib.pyplot as plt
from scipy.optimize import curve_fit

# Data for the Solar System
x_data = np.array([57.9, 108.2, 149.6, 228, 778.5, 1432, 2867, 4515, 5906.4])
y_data = np.array([47.4, 35, 29.8, 24.1, 13.1, 9.7, 6.8, 5.4, 4.7])

# Data for TRAPPIST-1
z_data = np.array([11.11 * 149.6 * 10**(-3), 15.21 * 149.6 * 10**(-3), 21.44 * 149.6 * 10**(-3),
                   28.17 * 149.6 * 10**(-3), 37.1 * 149.6 * 10**(-3), 45.1 * 149.6 * 10**(-3), 63 * 149.6 * 10**(-3)])
w_data = np.array([2 * 3.14 * 11.11 * 149.6 * 10**(3) / (1.51 * 86400), 2 * 3.14 * 15.21 * 149.6 * 10**(3) / (2.42 * 86400),
                   2 * 3.14 * 21.44 * 149.6 * 10**(3) / (4.05 * 86400), 2 * 3.14 * 28.17 * 149.6 * 10**(3) / (6.1 * 86400),
                   2 * 3.14 * 37.1 * 149.6 * 10**(3) / (9.2 * 86400), 2 * 3.14 * 45.1 * 149.6 * 10**(3) / (12.35 * 86400),
                   2 * 3.14 * 63 * 149.6 * 10**(3) / (20 * 86400)])

def funcSS(x, a):
    return a / np.sqrt(x)

# Fitting for the Solar System
popt, _ = curve_fit(funcSS, x_data, y_data)
a_fit = popt[0]
print(f"Fitted function: y = {a_fit} / sqrt(x)")
x_fit = np.linspace(x_data.min(), x_data.max(), 100)
y_fit = funcSS(x_fit, a_fit)

def funcTR(z, b):
    return b / np.sqrt(z)

# Fitting for TRAPPIST-1
popt2, _ = curve_fit(funcTR, z_data, w_data)
b_fit = popt2[0]
print(f"Fitted function: w = {b_fit} / sqrt(z)")
z_fit = np.linspace(z_data.min(), z_data.max(), 100)
w_fit = funcTR(z_fit, b_fit)

# Plotting
plt.figure(figsize=(10, 6))
plt.scatter(x_data, y_data, label='Solar System', color='b')
plt.scatter(z_data, w_data, label='TRAPPIST-1', color='r')
plt.plot(x_fit, y_fit, label='Fitted Solar System', color='b')
plt.plot(z_fit, w_fit, label='Fitted TRAPPIST-1', color='r')
plt.title('Rotational Curve of Solar System and TRAPPIST-1')
plt.xlabel('Distance - $10^6 km$')
plt.ylabel('Orbital Velocity - $km/s$')
plt.legend()
plt.grid()
plt.show()

# Calculating star masses
StarMass1 = a_fit**2 / (6.67 * 10**(-11) * 10**(-15))
print("Solar System mass:", StarMass1, "kg")
StarMass2 = b_fit**2 / (6.67 * 10**(-11) * 10**(-15))
print("TRAPPIST-1 mass:", StarMass2, "kg")
